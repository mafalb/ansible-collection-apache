# vim: set ft=yaml ts=2 expandtab:

# This file is part of ansible-collection-apache
# Copyright (c) 2021 Markus Falb <markus.falb@mafalb.at>
#
# ansible-collection-apache is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# ansible-collection-apache is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ansible-collection-apache.
# If not, see <https://www.gnu.org/licenses/>.

---

- name: apache is present
  package:
    name: "{{ httpd_packages }}"

- name: SCL only
  block:
  - name: SCL only - directory in /etc/opt is present
    file:
      path: /etc/opt/{{ scl_provider }}
      state: directory
      mode: "0755"
  - name: SCL only - symlink in /etc/opt is present
    file:
      src: "{{ httpd_basedir }}"
      dest: /etc/opt/{{ scl_provider }}/{{ scl_prefix }}
      state: link
  when: scl_prefix is defined

- name: directory for vhosts config is present
  block:
  - name: additional directories are present
    file:
      path: "{{ httpd_vhosts_d }}"
      state: directory
      mode: '755'
  when: not httpd_has_vhosts_d

- name: apache config is present
  template:
    src: "{{ httpd_template.src|default('mafalb.apache.httpd.conf.j2') }}"
    dest: "{{ httpd_main_cfg if httpd_template.dest == '_main_config' else (httpd_conf_d_wr|default(httpd_conf_d) + '/' + httpd_template.dest) }}"
    mode: "{{ httpd_cfg_mode }}"
    backup: true
  vars:
    httpd_cfg_dict: "{{ httpd.cfg if httpd_template.dest == '_main_config' else yaml|default({}) }}"
  loop: "{{ templates }}"
  loop_control:
    loop_var: httpd_template
  when: templates is defined
  notify: reload httpd
  register: _httpd_templates

- name: symlink if necessary (e.g. on debian)
  file:
    src: "{{ httpd_conf_d_wr }}/{{ httpd_template.dest }}"
    dest: "{{ httpd_conf_d }}/{{ httpd_template.dest }}"
    state: link
  loop: "{{ templates }}"
  loop_control:
    loop_var: httpd_template
  when:
  - templates is defined
  - httpd_conf_d_wr is defined
  - httpd_template.dest != '_main_config'
  notify: reload httpd
  register: _httpd_symlinks

- name: check config
  command: "{{ httpd_configtest }}"
  register: _configtest
  changed_when: false

- block:
  - name: debug
    debug: var=_httpd_templates
  - name: debug
    debug: var=_httpd_symlinks
  - name: debug
    debug: var=_configtest
  tags:
  - never
  - debug

- name: apache is started
  service:
    name: "{{ httpd_service }}"
    state: started
    enabled: "{{ httpd_service_enabled }}"
  register: _httpd_has_started

...
