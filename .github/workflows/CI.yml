# vim: set ft=yaml ts=2 expandtab:
---

name: CI

on:  # yamllint disable-line rule:truthy

  push:
    branches:
    - '**'
    tags-ignore:
    - '*'
  pull_request:
  pull_request_review:
  schedule:
    - cron: '40 11 * * 6'

jobs:

  SANITY:

    # don't run on pull request from ourselves
    #
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

      matrix:

        include:

        - ansible_version: '2.9'
          python-version: 2.7
          ansible-lint_version: '==4.*'

        - ansible_version: '2.9'
          python-version: 3.5
          ansible-lint_version: '<5'

        - ansible_version: '2.9'
          python-version: 3.6

        - ansible_version: '2.9'
          python-version: 3.7

        - ansible_version: '2.9'
          python-version: 3.8


        - ansible_version: '2.10'
          python-version: 3.6

        - ansible_version: '2.10'
          python-version: 3.7

        - ansible_version: '2.10'
          python-version: 3.8

        - ansible_version: '2.10'
          python-version: 3.9


        - ansible_core_version: '2.11'
          python-version: 3.6

        - ansible_core_version: '2.11'
          python-version: 3.7

        - ansible_core_version: '2.11'
          python-version: 3.8

        - ansible_core_version: '2.11'
          python-version: 3.9

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      ANSIBLE_PYTHON_INTERPRETER: ${{ matrix.python-version }}/bin/python

    defaults:
      run:
        working-directory: ansible_collections/mafalb/apache

    steps:

    - name: checkout collection mafalb.apache
      uses: actions/checkout@v2
      with:
        path: ansible_collections/mafalb/apache

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # temporarily use dev branch
    - name: checkout collection mafalb.ansible
      uses: actions/checkout@v2
      with:
        repository: mafalb/ansible-collection-ansible
        ref: dev
        path: ansible_collections/mafalb/ansible

    - name: move ansible into place
      run: |
        mkdir -p ~/.ansible/collections/ansible_collections/mafalb
        mv ../ansible ~/.ansible/collections/ansible_collections/mafalb/

    - name: install molecule
      run: |
        #ansible-galaxy collection install mafalb.ansible
        ansible-playbook -D ~/.ansible/collections/ansible_collections/mafalb/ansible/playbooks/molecule-virtualenv.yml -e mafalb_ansible_version=${{ matrix.ansible_version }} -t all,debug

    - name: check ansible version
      run: |
        source ~/virtualenv/bin/activate
        ansible --version
        which ansible-test
        ansible-lint --version
        ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

    - name: check python version
      run: |
        source ~/virtualenv/bin/activate
        ansible --version | grep "^\s*python.* ${{ matrix.python-version }}"

    - name: install shellcheck
      run: sudo apt install shellcheck

    - name: lint
      run: |
        source ~/virtualenv/bin/activate
        if ansible-lint --version|grep "^ansible-lint 4"
        then
            ANSIBLE_LINT_VERSION=4
        fi
        . tests/lint.sh requirements ${{ matrix.python-version }}

  CI:

    # don't run on pull request from ourselves
    #
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-20.04

    strategy:

      fail-fast: false

      matrix:

        target:
        - fedora33
        - fedora34
        - c8s
        - centos7
        - centos8
        - rocky8
        - alma8
        - debian9
        - debian10
        - debian11
        - ubuntu16
        - ubuntu18
        - ubuntu20
        - ubuntu2104

        ansible_version:
        - '2.9'
        - '2.10'
        - '2.11'

        include:

        - target: fedora33
          image: docker.io/fedora:33
          privileged: true

        - target: fedora34
          image: docker.io/fedora:34
          privileged: true

        - target: c8s
          image: quay.io/centos/centos:stream8

        - target: alma8
          image: quay.io/almalinux/almalinux:8

        - target: rocky8
          image: quay.io/rockylinux/rockylinux:8

        - target: centos7
          image: quay.io/centos/centos:7
          has_scl: true

        - target: centos8
          image: quay.io/centos/centos:8

        # debian stretch
        - target: debian9
          image: docker.io/debian:9

        # debian buster
        - target: debian10
          image: docker.io/debian:10
          privileged: true

        # debian bullseye
        - target: debian11
          image: docker.io/debian:11
          privileged: true

        # ubuntu xenial
        - target: ubuntu16
          image: docker.io/ubuntu:16.04

        # ubuntu bionic
        - target: ubuntu18
          image: docker.io/ubuntu:18.04

        # ubuntu focal
        - target: ubuntu20
          image: docker.io/ubuntu:20.04

        # ubuntu hirsute
        - target: ubuntu2104
          image: docker.io/ubuntu:21.04

    env:
      ANSIBLE_VERSION: ${{ matrix.ansible_version }}
      CI_IMAGE: ${{ matrix.image }}
      CI_HOSTNAME: ci-${{ matrix.target }}
      CI_PRIVILEGED: ${{ matrix.privileged }}
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/apache

    steps:

    - name: checkout collection mafalb.apache
      uses: actions/checkout@v2
      with:
        path: ansible_collections/mafalb/apache

    - name: install molecule
      run: |
        ansible-galaxy collection install mafalb.ansible
        ansible-playbook -D ~/.ansible/collections/ansible_collections/mafalb/ansible/playbooks/molecule.yml -e molecule_ansible_version=${{ matrix.ansible_version }} -t all,debug

    - name: check ansible version
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

    - name: molecule tests
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test

    - name: molecule tests with proxy
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s proxy

    - name: molecule tests with scl
      if: matrix.has_scl == true
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s scl

    - name: molecule tests with custom template
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s template

    - name: molecule test cfg_only
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s cfg_only

    - name: molecule test for cfg_absent cfg
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s cfg_absent

    - name: molecule test for absent
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s absent

    - name: molecule test for perm
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s perm

    - name: molecule test for httpd_default_template
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s httpd_default_template

    - name: molecule test for httpd_service_managed_1
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s httpd_service_managed_1

    - name: molecule test for httpd_service_managed_2
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test -s httpd_service_managed_2

...
